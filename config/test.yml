# Define usernames or uuid of ultra admins (you need at least one to setup MCL ingame).
# These admins may, at any time, op themself with either the server or MCL itself!
admins:
  - 2called_chaos
  - 93cc6d87-776e-459f-b40a-530a5670c07c

# =============
# = Minecraft =
# =============
# Define the location in which your minecraft server is installed in (where the server.properties file is).
# WARNING: MCL contains components which alter the contents of the folder you specify!
#          MCL may download, create, symlink, backup, restore, delete or modify files and folders such as:
#            - Schematics
#            - server.properties (to switch worlds via !world command)
#            - World directories
#          MCL might update your server and by that overwrite your current server jar. Be sure to always
#          make backups of everything,
root: /Volumes/code/_private/mcl/_server

# Define the full command to start your minecraft server. The command will be executed within the root
# directory you've specified so there is no need to `cd` into it.
# If you plan to use automatic server updates use `minecraft_server.jar` (MCL uses symlinks).
launch_cmd: java -jar minecraft_server.jar

# ============
# = Database =
# ============
# Use the set below if you want to use MySQL.
# NOTE: If you use SQLite you cannot share the same database across multiple instances of MCL as SQLite
#       does not support concurrent access. Make sure to define a unique filename for each instance,
#       or comment it out to use `vendor/data/<instance>.sqlite`. The file is relative to the MCL root directory.
database:
  adapter: sqlite3
  # database: vendor/data/database.sqlite

#database:
#  adapter: mysql2
#  encoding: utf8
#  database: mcl
#  username: root
#  password:
#  host: 127.0.0.1
#  port: 3306



# =======================================================
# = YOU PROBABLY WONT NEED TO EDIT ANYTHING BELOW HERE! =
# =======================================================

# MCL tick rate. Should be between 0 and 1 (default is 0.25).
# The lower the value the higher the resource load caused by MCL.
# The higher the value the slower MCL responds.
tick_rate: 0.25

# Define if MCL should start in debug mode or not.
# You can toggle it later (either ingame or via USR1 signal).
debug: yes

# The developer mode is very verbose (dozens and hundreds of messages per second)
# so you may use it for debugging only.
dev: yes

# Define if MCL should attach ActiveRecord's logger in dev mode or not.
attach_ar_logger: yes
